# Simple application name foo
# It has following characterstics
# Pool with two servers and HTTP health monitor
# Single VIP
# HTTPS application
# Uses secured HTTPS profile.
# Automatic Re-direct to HTTPS - SSL Everywhere
---
- hosts: localhost
  connection: local
  vars_files:
    - "vars/creds_unsecure.yml"
  vars:
    api_version: 17.1.2
    app_name: securedfoo
  roles:
    - role: avinetworks.avisdk
  tasks:
    - name: create self-signed SSL cert
      command: openssl req -new -nodes -x509 -subj "/C=US/ST=CA/L=San Francisco/O=IT/CN={{ app_name }}.com" -days 3650 -keyout ssl_certs/{{app_name}}.key -out ssl_certs/{{app_name}}.crt -extensions v3_ca creates=ssl_certs/{{app_name}}.crt
    - name: Printing Private Key
      debug: msg="Private Key is {{ lookup('file', 'ssl_certs/'~app_name~'.key') }}"
    - name: Printing Public Certificate
      debug: msg="Public Cert is {{ lookup('file', 'ssl_certs/'~app_name~'.crt')}}"
    - name: Upload or Update SSL certificate - always changed due to sensitve field
      avi_sslkeyandcertificate:
        controller: "{{ avi_controller}}"
        username: "{{ avi_username }}"
        password: "{{ avi_password }}"
        api_version: "{{ api_version }}"
        tenant: admin
        key: "{{ lookup('file', 'ssl_certs/'~app_name~'.key') }}"
        certificate:
          self_signed: true
          certificate: "{{ lookup('file', 'ssl_certs/'~app_name~'.crt')}}"
        type: SSL_CERTIFICATE_TYPE_VIRTUALSERVICE
        name: "{{app_name}}-cert"

    - name: Create or Update Pool
      avi_pool:
        controller: "{{ avi_controller}}"
        username: "{{ avi_username }}"
        password: "{{ avi_password }}"
        api_version: "{{ api_version }}"
        name: "{{app_name}}-pool"
        health_monitor_refs:
          - '/api/healthmonitor?name=System-HTTP'
        cloud_ref: '/api/cloud?name=Default-Cloud'
        servers:
          - ip:
               addr: '10.90.64.16'
               type: 'V4'

    - name: Create Virtual Service > 17.x
      avi_virtualservice:
        controller: "{{ avi_controller}}"
        username: "{{ avi_username }}"
        password: "{{ avi_password }}"
        api_version: "{{ api_version }}"
        name: "{{app_name}}"
        pool_ref: "/api/pool?name={{app_name}}-pool"
        cloud_ref: '/api/cloud?name=Default-Cloud'
        vip:
          - ip_address:
              addr: '10.90.64.225'
              type: 'V4'
            vip_id: '1'
        ssl_key_and_certificate_refs:
          - '/api/sslkeyandcertificate?name={{app_name}}-cert'
        ssl_profile_ref: '/api/sslprofile?name=System-Standard'
        application_profile_ref: '/api/applicationprofile?name=System-Secure-HTTP'
        services:
          - port: 80
          - port: 443
            enable_ssl: true
      when:
        - api_version > '17'

    - name: Create Virtual Service <= 17.x
      avi_virtualservice:
        controller: "{{ avi_controller}}"
        username: "{{ avi_username }}"
        password: "{{ avi_password }}"
        api_version: "{{ api_version }}"
        name: "{{app_name}}"
        pool_ref: "/api/pool?name={{app_name}}-pool"
        cloud_ref: '/api/cloud?name=Default-Cloud'
        ip_address:
          addr: '10.90.64.225'
          type: 'V4'
        ssl_key_and_certificate_refs:
          - '/api/sslkeyandcertificate?name={{app_name}}-cert'
        ssl_profile_ref: '/api/sslprofile?name=System-Standard'
        application_profile_ref: '/api/applicationprofile?name=System-Secure-HTTP'
        services:
          - port: 80
          - port: 443
            enable_ssl: true
      when:
        - api_version < '17'
