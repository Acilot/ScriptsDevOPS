# This will setup basic VS based on the
# Configuration passed.
---
- hosts: localhost
  connection: local
  vars_files:
    - "../vars/creds_unsecure.yml"
    - "../applications/{{ app_name }}/config.yml"
  vars:
    api_version: 17.1.2
  roles:
    - role: avinetworks.avisdk
  tasks:
    - name: Avi Pool | Create or Update Pool
      avi_pool:
        controller: "{{ avi_controller}}"
        username: "{{ avi_username }}"
        password: "{{ avi_password }}"
        tenant: "{{ tenant | default(omit) }}"
        api_version: "{{ api_version }}"
        name: "{{item.name}}"
        health_monitor_refs: "{{ item.health_monitor_refs | default([]) }} "
        cloud_ref: "{{item.cloud_ref | default(omit)}}"
        tenant_ref: "{{item.tenant_ref | default(omit)}}"
        servers: "{{item.servers | default([])}}"
        application_persistence_profile_ref: "{{item.application_persistence_profile_ref | default(omit)}}"
        enabled: "{{item.enabled | default(omit)}}"
        lb_algorithm: "{{item.lb_algorithm | default(omit)}}"
        ssl_key_and_certificate_ref: "{{item.ssl_key_and_certificate_ref | default(omit)}}"
        ssl_profile_ref: "{{item.ssl_profile_ref|default(omit)}}"
        state: "{{item.state | default(omit)}}"
        vrf_ref: "{{item.vrf_ref | default(omit)}}"
      with_items: "{{ avi_pool_objs | default([])}}"

    - name: Avi Virtualservice |Create Virtual Service
      avi_virtualservice:
        controller: "{{ avi_controller}}"
        username: "{{ avi_username }}"
        password: "{{ avi_password }}"
        tenant: "{{tenant | default(omit)}}"
        api_version: "{{ api_version }}"
        state: "{{item.state | default(omit)}}"
        name: "{{item.name}}"
        pool_ref: "{{item.pool_ref | default(omit)}}"
        cloud_ref: "{{item.cloud_ref | default(omit)}}"
        tenant_ref: "{{item.tenant_ref | default(omit)}}"
        vip: "{{item.vip}}"
        services: "{{item.services}}"
      with_items: "{{ avi_virtualservice_objs | default([])}}"

