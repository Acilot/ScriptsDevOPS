---
- hosts: localhost
  vars:
    vcenter_hostname: 10.10.2.10
    username: root
    password: vmware
    build: test
    guest_name: "vmware.docker.test.{{ build }}"
    template: "centos-7-bare-template"
  tasks:
    - file: path=roles state=directory mode=0755
    - shell: ansible-galaxy install -p roles -r ansible_requirements.yml -cf
    - name: Create the VMware virtual machine.
      vsphere_guest:
        vcenter_hostname: "{{ vcenter_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        guest: "{{ guest_name }}"
        from_template: yes
        template_src: "{{ template }}"
        validate_certs: false
        cluster: Arista
        resource_pool: /Resources
    - name: Get information from the virtual machine.
      vsphere_guest:
        vcenter_hostname: "{{ vcenter_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        guest: "{{ guest_name }}"
        validate_certs: false
        vmware_guest_facts: yes
      register: host
    - debug: var=host
    - add_host: name="{{ host.ansible_facts.hw_eth0.ipaddresses[0] }}" groups=hosts ansible_user=root

- hosts: hosts
  tasks:
    - yum: name='*' state=latest
    - selinux: state=disabled
    - name: restart machine
      shell: sleep 2 && shutdown -r now "Ansible updates triggered"
      async: 1
      poll: 0
      sudo: true
      ignore_errors: true
    - name: waiting for server to come back
      local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=300
      sudo: false
    - sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes
    - service: name="firewalld" state="stopped" enabled="no"

- hosts: hosts
  roles:
    - role: avinetworks.docker
    - role: avinetworks.avicontroller
